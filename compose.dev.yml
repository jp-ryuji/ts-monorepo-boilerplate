services:
  api:
    container_name: tsmono-api-dev
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
      args:
        - SERVICE_NAME=api
    networks:
      tsmono-network:
        aliases:
          - api.tsmono.local
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - '${API_PORT_EXTERNAL:-3000}:3000'
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  web:
    container_name: tsmono-web-dev
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
      args:
        - SERVICE_NAME=web
    networks:
      tsmono-network:
        aliases:
          - web.tsmono.local
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - '${WEB_PORT_EXTERNAL:-3001}:3001'
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api.tsmono.local:3000
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  postgres:
    container_name: tsmono-postgres-dev
    image: postgres:17
    networks:
      - tsmono-network
    ports:
      - '${DB_PORT_EXTERNAL:-5432}:5432'
    environment:
      - POSTGRES_USER=${DB_USER:-tsmono_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-tsmono_password}
      - POSTGRES_DB=${DB_NAME:-tsmono_db}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${DB_USER:-tsmono_user} -d ${DB_NAME:-tsmono_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  redis:
    container_name: tsmono-redis-dev
    image: redis:8-alpine
    networks:
      - tsmono-network
    ports:
      - '${REDIS_PORT_EXTERNAL:-6379}:6379'
    volumes:
      - redis_data_dev:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  tsmono-network:
    driver: bridge
    name: tsmono-monorepo-network-dev

volumes:
  postgres_data_dev:
    name: tsmono_postgres_data_dev
  redis_data_dev:
    name: tsmono_redis_data_dev
